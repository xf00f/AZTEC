import BN from "bn.js";
import { Address } from "web3x/address";
import { EventLog, TransactionReceipt } from "web3x/formatters";
import { Contract, ContractOptions, TxCall, TxSend, EventSubscriptionFactory } from "web3x/contract";
import { Eth } from "web3x/eth";
import abi from "./ERC20MintableAbi";
export type TransferEvent = {
    from: Address;
    to: Address;
    value: string;
};
export type ApprovalEvent = {
    owner: Address;
    spender: Address;
    value: string;
};
export interface TransferEventLog extends EventLog<TransferEvent, "Transfer"> {
}
export interface ApprovalEventLog extends EventLog<ApprovalEvent, "Approval"> {
}
interface ERC20MintableEvents {
    Transfer: EventSubscriptionFactory<TransferEventLog>;
    Approval: EventSubscriptionFactory<ApprovalEventLog>;
}
interface ERC20MintableEventLogs {
    Transfer: TransferEventLog;
    Approval: ApprovalEventLog;
}
interface ERC20MintableTxEventLogs {
    Transfer: TransferEventLog[];
    Approval: ApprovalEventLog[];
}
export interface ERC20MintableTransactionReceipt extends TransactionReceipt<ERC20MintableTxEventLogs> {
}
interface ERC20MintableMethods {
    approve(spender: Address, value: number | string | BN): TxSend<ERC20MintableTransactionReceipt>;
    totalSupply(): TxCall<string>;
    transferFrom(from: Address, to: Address, value: number | string | BN): TxSend<ERC20MintableTransactionReceipt>;
    increaseAllowance(spender: Address, addedValue: number | string | BN): TxSend<ERC20MintableTransactionReceipt>;
    balanceOf(owner: Address): TxCall<string>;
    decreaseAllowance(spender: Address, subtractedValue: number | string | BN): TxSend<ERC20MintableTransactionReceipt>;
    transfer(to: Address, value: number | string | BN): TxSend<ERC20MintableTransactionReceipt>;
    allowance(owner: Address, spender: Address): TxCall<string>;
    mint(_to: Address, _value: number | string | BN): TxSend<ERC20MintableTransactionReceipt>;
}
export interface ERC20MintableDefinition {
    methods: ERC20MintableMethods;
    events: ERC20MintableEvents;
    eventLogs: ERC20MintableEventLogs;
}
export class ERC20Mintable extends Contract<ERC20MintableDefinition> {
    constructor(eth: Eth, address?: Address, options?: ContractOptions) {
        super(eth, abi, address, options);
    }
    deploy(): TxSend<ERC20MintableTransactionReceipt> {
        return super.deployBytecode("0x608060405234801561001057600080fd5b506106a3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806340c10f191161006657806340c10f191461015457806370a0823114610180578063a457c2d7146101a6578063a9059cbb146101d2578063dd62ed3e146101fe57610093565b8063095ea7b31461009857806318160ddd146100d857806323b872dd146100f25780633950935114610128575b600080fd5b6100c4600480360360408110156100ae57600080fd5b506001600160a01b03813516906020013561022c565b604080519115158252519081900360200190f35b6100e06102a8565b60408051918252519081900360200190f35b6100c46004803603606081101561010857600080fd5b506001600160a01b038135811691602081013590911690604001356102ae565b6100c46004803603604081101561013e57600080fd5b506001600160a01b038135169060200135610377565b6100c46004803603604081101561016a57600080fd5b506001600160a01b038135169060200135610425565b6100e06004803603602081101561019657600080fd5b50356001600160a01b031661043a565b6100c4600480360360408110156101bc57600080fd5b506001600160a01b038135169060200135610455565b6100c4600480360360408110156101e857600080fd5b506001600160a01b03813516906020013561049e565b6100e06004803603604081101561021457600080fd5b506001600160a01b03813581169160200135166104ab565b60006001600160a01b03831661024157600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b6001600160a01b03831660009081526001602090815260408083203384529091528120546102e2908363ffffffff6104d616565b6001600160a01b03851660009081526001602090815260408083203384529091529020556103118484846104eb565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60006001600160a01b03831661038c57600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103c0908363ffffffff6105b616565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600061043183836105cf565b50600192915050565b6001600160a01b031660009081526020819052604090205490565b60006001600160a01b03831661046a57600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546103c0908363ffffffff6104d616565b60006104313384846104eb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000828211156104e557600080fd5b50900390565b6001600160a01b0382166104fe57600080fd5b6001600160a01b038316600090815260208190526040902054610527908263ffffffff6104d616565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461055c908263ffffffff6105b616565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828201838110156105c857600080fd5b9392505050565b6001600160a01b0382166105e257600080fd5b6002546105f5908263ffffffff6105b616565b6002556001600160a01b038216600090815260208190526040902054610621908263ffffffff6105b616565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fea165627a7a7230582076fe54334156e4b9bd697e38890ffc1ce24911176699c882f70d4f466cca88c90029") as any;
    }
}
export var ERC20MintableAbi = abi;
